#+TITLE: README

* Scratching my own itch
  I started using emacs in 2008 when learning lisp. While I still love
  programming lisp the real benifit of that time was learning emacs. I
  had been a vim user for many years and didn't think much of other
  editors. The funny thing was emacs was the first programmer's editor
  I tried. I had two problems with it:

  1. I could get syntax highlighting turned on.
  2. I couldn't exit the editor.

  I tried vim and when through the next eight years I convinced myself
  that vim was the one true editor.

  When I started learning emacs I finally saw the power that I was
  missing.  Vim is programmers editor. It's niche is in being the most
  efficient text editor it can be. And to this day, I still believe
  that vim is a more efficient editor than emacs. But the goal of
  emacs isn't to be the most efficient.

  Emacs has a philosophy of text as metaphor. And anything that can be
  represented as text, emacs should be able to handle. Whether that's
  an email client, debugger, termanal or game emacs can be serve as
  the interface. And on the console where everything is text it gives
  universal interface to all tools. And the ability to tie any text
  based program in to your workflow is a different type of efficiency
  than the vim verity.
  
  But after saying all that it's still a heck of a programmer's
  editor. My main programming language when I started with emacs was
  perl. I have configure emacs to be a comfortable perl programming
  experience for me. This book is my attempt to do that for ruby.

  I find ruby a fasinating language. With familiar things from perl,
  but also things I recognize from lisp and smalltalk. Because I enjoy
  it so much, I want to have the best enviroment for ruby I can in
  emacs.  But this time I plan to record my experice for others.
